Idea for pipeline of changes.

VALIDATION/RULE SET - This is where I will apply naming conventions, validation, etc to any changes to
either worksheets or the named ranges.

SHEET_TRACKER - This will handle any changes to the worksheets.

NAME_MANAGER - This will have to respond to changes made by the SHEET_TRACKER as well as handle the ability to change at a lower level.


TO ADD:

Add easy to use navigation and console logging to make traversing a complex spreadsheet more fluid.

When adding a sheet, include the formula =SHEET(first_cell of sheet) in order to keep strack if the
sheet exists and whether or not their names match what is given.
    -- Essentially a way to keep a pointer/reference to a sheet by using Excel itself.
    -- THIS WILL BE VERY USEFUL FOR HANDLING SHEET RENAMES

Add Two Dimensional Look Up Sheet as a Sheet Type.
    -- How will I handle the naming of this?
    -- In past versions of naming methodologies, it was done by a function that allowed the names to be set by string.
    -- Will there be issues with renaming?
    --- I'm thinking since a two dimensional look up sheet will ALWAYS only have three named ranges (row, column, data),
        Everything will always be a rename, unless a sheet is added or deleted.


Formula formatting
    - Probably use parser provided by openpyxl to help with spacing/indenting/leveling.

Coloring
    - Will be easy but not complete until index tracking is implemented.

Index tracking.
    - Probably the most complex feature up with Naming rules/validation.
    - Not sure if it provides as much value for the effort required.


Archive functionality (just quick saving essentially, will be easy)

Logging - Track changes such as index setting, named range changes (add, rename, swaps, deletions)

Name rules - How to handle column headings that do not adhere to the rules needed to add a range as name.
    - Will probably use openpxyl parser to help determine valid named range names.

    - How much flexibility should be allowed when building workbooks with texel?
    -- Should names be FORCED to abide by naming conventions?
    -- Should conversion on the backend happen for every case?
    -- Should it be a mix? e.g. Force naming convention of CAPITAL_SHEET_NAME__variable_name but conversion for things such as special characters?

    -- Could potentially create different modes depending on use case.
    --- Strict would be first, most validation
    --- Relaxed would be second option, no validation. How the project is in its current state (5/23/2020)
    --- Mixed would be third, validation for certain cases only. I like this idea in theory but I feel the other two should be perfected before doing a mix of rules.
